(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{92:function(n,e,t){"use strict";t.r(e),t.d(e,"frontMatter",(function(){return u})),t.d(e,"metadata",(function(){return s})),t.d(e,"toc",(function(){return l})),t.d(e,"default",(function(){return o}));var a=t(3),i=t(7),r=(t(0),t(100)),u={id:"questions",title:"Practice Questions",sidebar_label:"C++ Work Sheet"},s={unversionedId:"lang/questions",id:"lang/questions",isDocsHomePage:!1,title:"Practice Questions",description:"Overview",source:"@site/notes/lang/questions.md",slug:"/lang/questions",permalink:"/notes/lang/questions",editUrl:"https://github.com/rashikansar/notes/edit/main/notes/lang/questions.md",version:"current",lastUpdatedBy:"Rashik Ansar",lastUpdatedAt:1610886060,sidebar_label:"C++ Work Sheet",sidebar:"lang",previous:{title:"C++",permalink:"/notes/lang/cpp"}},l=[{value:"Overview",id:"overview",children:[]},{value:"Variables",id:"variables",children:[]},{value:"Input/Output",id:"inputoutput",children:[]}],c={toc:l};function o(n){var e=n.components,t=Object(i.a)(n,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"overview"},"Overview"),Object(r.b)("details",null,Object(r.b)("summary",null,"Print your name"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp",metastring:'title="my_name.cpp"',title:'"my_name.cpp"'}),'#include <iostream>\n\nint main() {\n  // Change string "YOUR NAME HERE" to your name\n  std::cout << "YOUR NAME HERE" << std::endl;\n  return 0;\n}\n'))),Object(r.b)("details",null,Object(r.b)("summary",null,"Print your name, age, hobbies "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp",metastring:'title="bio.cpp"',title:'"bio.cpp"'}),'#include <iostream>\n\nint main() {\n  std::cout << "C++\\n"; // \\n is new line\n  std::cout << 25 << std::endl;\n  std::cout << "Coding" << std::endl;\n\n  return 0;\n}\n'))),Object(r.b)("h2",{id:"variables"},"Variables"),Object(r.b)("details",null,Object(r.b)("summary",null,"Create a variable to store your favourite number and print it"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp",metastring:'title="fav_num.cpp"',title:'"fav_num.cpp"'}),"#include <iostream>\n\nusing namespace std;\n\nint main() {\n  // declare and initialize a variable\n  int favNum = 3;\n  // printing the variable value\n  cout << favNum << endl;\n\n  return 0;\n}\n"))),Object(r.b)("details",null,Object(r.b)("summary",null,"Create variables to store your name, favourite number and print it"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp",metastring:'title="fav_num.cpp"',title:'"fav_num.cpp"'}),'#include <iostream>\n\nusing namespace std;\n\nint main() {\n  // declare and initialize variables\n  string myName = "C++";\n  int favNum = 3;\n  // printing the variable value\n  cout << myName << endl;\n  cout << favNum << endl;\n\n  return 0;\n}\n'))),Object(r.b)("h2",{id:"inputoutput"},"Input/Output"),Object(r.b)("details",null,Object(r.b)("summary",null,"Take input of favourite number and print it on screen"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp",metastring:'title="numInput.cpp"',title:'"numInput.cpp"'}),'#include <iostream>\n\nusing namespace std;\n\nint main() {\n  int favNum;\n  cout << "Enter yout fav.number: ";\n  cin >> favNum;\n  cout << favNum << endl;\n  return 0;\n}\n'))),Object(r.b)("details",null,Object(r.b)("summary",null,"Take full name of user and age of user as inputs and print them "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-cpp",metastring:'title="stringInput.cpp"',title:'"stringInput.cpp"'}),'#include <iostream>\n\nusing namespace std;\n\nint main() {\n  string name;\n  cout << "Enter your name : ";\n  // using getline since cin considers space as termination of input\n  getline(cin, name);\n\n  int age;\n  cout << "Enter your age: ";\n  cin >> age;\n\n  cout << "Name: " << name << endl;\n  cout << "Age: " << age << endl;\n\n  return 0;\n}\n\n'))))}o.isMDXComponent=!0}}]);