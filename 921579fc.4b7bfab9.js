(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{105:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return d}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=a.a.createContext({}),l=function(e){var n=a.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=l(e.components);return a.a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=m(e,["components","mdxType","originalType","parentName"]),u=l(t),b=r,d=u["".concat(i,".").concat(b)]||u[b]||p[b]||o;return t?a.a.createElement(d,s(s({ref:n},c),{},{components:t})):a.a.createElement(d,s({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=b;var s={};for(var m in n)hasOwnProperty.call(n,m)&&(s[m]=n[m]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},87:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return m})),t.d(n,"default",(function(){return l}));var r=t(3),a=t(7),o=(t(0),t(105)),i={slug:"number-system",title:"Number System Conversions",author:"Rashik Ansar",author_title:"Rashik Notes",author_url:"https://github.com/rashikansar",author_image_url:"https://raw.githubusercontent.com/RashikAnsar/notes/main/static/img/logo.svg",tags:["numbers","coding","cpp"]},s={permalink:"/notes/blog/number-system",editUrl:"https://github.com/rashikansar/notes/edit/main/blog/2021-03-14-number-system-conversion.md",source:"@site/blog/2021-03-14-number-system-conversion.md",description:"Convert a number from one number system to another number system.",date:"2021-03-14T00:00:00.000Z",tags:[{label:"numbers",permalink:"/notes/blog/tags/numbers"},{label:"coding",permalink:"/notes/blog/tags/coding"},{label:"cpp",permalink:"/notes/blog/tags/cpp"}],title:"Number System Conversions",readingTime:1.765,truncated:!0,nextItem:{title:"Hello",permalink:"/notes/blog/hello-world"}},m=[{value:"Number System",id:"number-system",children:[{value:"Conversion between two number systems",id:"conversion-between-two-number-systems",children:[]},{value:"Examples",id:"examples",children:[]}]}],c={toc:m};function l(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Convert a number from one number system to another number system. "),Object(o.b)("h2",{id:"number-system"},"Number System"),Object(o.b)("p",null,"In computer science we might have come across various number systems like binary, octal, decimal and hexadecimal. Everything in the memory is stored in binary form whenever we print address of a variable the compiler will print address in hexadecimal format."),Object(o.b)("h3",{id:"conversion-between-two-number-systems"},"Conversion between two number systems"),Object(o.b)("p",null,"Given a number in ",Object(o.b)("inlineCode",{parentName:"p"},"x")," number system (input number sytem or given number system) and want them it in ",Object(o.b)("inlineCode",{parentName:"p"},"y")," number system (output number sytem or expected number system). The more generalized algorithm but ",Object(o.b)("strong",{parentName:"p"},"it'll work only for those number systems whose base that is less than or equal to the decimal number system")," (example: It'll not work hexadecimal system since it has characters in it and it'is greater than 10)."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp",metastring:'title="algo.cpp"',title:'"algo.cpp"'}),"void numConversion(int num,int inputNumSystem, int outputNumSystem) {\n    int power = 1, ans = 0, rem = 0;\n\n    while(num) {\n        rem = num % outputNumSystem;\n        ans += rem * power;\n        power *= inputNumSystem;\n        num /= outputNumSystem;\n    }\n    cout << ans << endl;\n}\n")),Object(o.b)("h3",{id:"examples"},"Examples"),Object(o.b)("p",null,"Binary to Decimal number conversion using the same algorithm but with in the main function itself. We can try with various number systems where we just have to change the ",Object(o.b)("inlineCode",{parentName:"p"},"GIVEN_NUMBER_SYSTEM ")," and ",Object(o.b)("inlineCode",{parentName:"p"},"EXPECTED_NUMBER_SYSTEM")," values. "),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp",metastring:'{12,13} title="binaryToDecimal.cpp"',"{12,13}":!0,title:'"binaryToDecimal.cpp"'}),"#include <iostream>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n\n    int power = 1, ans = 0, rem = 0;\n\n    // BINARY TO DECIMAL\n    int GIVEN_NUMBER_SYSTEM = 2;\n    int EXPECTED_NUMBER_SYSTEM = 10;\n\n    while(n) {\n        rem = n % EXPECTED_NUMBER_SYSTEM;\n        ans += rem * power;\n        power *= GIVEN_NUMBER_SYSTEM;\n        n /= EXPECTED_NUMBER_SYSTEM;\n    }\n    cout << ans << endl;\n    return 0;\n}\n")),Object(o.b)("p",null,"Another example with Decimal to Octal"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-cpp",metastring:'{12,13} title="decimalToOctal.cpp"',"{12,13}":!0,title:'"decimalToOctal.cpp"'}),"#include <iostream>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n\n    int power = 1, ans = 0, rem = 0;\n\n    // DECIMAL TO OCTAL\n    int GIVEN_NUMBER_SYSTEM = 10;\n    int EXPECTED_NUMBER_SYSTEM = 8;\n\n    while(n) {\n        rem = n % EXPECTED_NUMBER_SYSTEM;\n        ans += rem * power;\n        power *= GIVEN_NUMBER_SYSTEM;\n        n /= EXPECTED_NUMBER_SYSTEM;\n    }\n    cout << ans << endl;\n    return 0;\n}\n")))}l.isMDXComponent=!0}}]);